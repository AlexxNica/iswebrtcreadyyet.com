!!! 5
html
  head
    title Is WebRTC ready yet?
    meta(charset='utf-8')
    link(rel='stylesheet', href='style.css')
    link(rel='stylesheet', href='prettify.css')
  body
    .wrap
      section
        h1 Is WebRTC ready yet?
        #support
          table
            tr.browsers
              th 
              th
                img(src="https://raw.github.com/paulirish/browser-logos/master/chrome-canary/chrome-canary.png", alt="Chrome Canary", title="Chrome Canary")              
              th 
                img(src="https://raw.github.com/paulirish/browser-logos/master/chrome/chrome_256x256.png", alt="Chrome", title="Chrome")
              th 
                img(src="https://raw.github.com/paulirish/browser-logos/master/firefox-nightly/firefox-nightly.png", alt="Firefox Nightly", title="Firefox Nightly")
              th
                img(src="https://raw.github.com/paulirish/browser-logos/master/firefox/firefox_256x256.png", alt="Firefox", title="Firefox")
              th
                img(src="https://raw.github.com/paulirish/browser-logos/master/ie9-10/ie9-10_256x256.png", alt="Internet Explorer", title="Internet Explorer")                
              th
                img(src="https://raw.github.com/paulirish/browser-logos/master/safari/safari.png", alt="Safari", title="Safari")
              th
                img(src="https://raw.github.com/paulirish/browser-logos/master/opera/opera_256x256.png", alt="Opera", title="Opera")
            tr.versions
              th 
              th Canary
              th Chrome 28              
              th Nightly            
              th Firefox 22              
              th Safari 7
              th IE 10
              th Opera 15
            tr 
              th.feature 
                a(href="#peerConn") PeerConnections
              td.yes
              td.yes
              td.yes
              td.yes
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") The basic building block for connecting to peers.
            tr
              th
                a(href="#getUserMedia") getUserMedia
              td.yes
              td.yes
              td.yes
              td.yes
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") The ability to request access to a user's webcam and microphone.
            tr
              th
                a(href="#mediaConstraints", title="for bandwidth control") mediaConstraints
              td.yes
              td.yes
              td.yes
              td.yes
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") The ability to specify restricted video sizes. This is important for bandwidth control.
            tr
              th
                a(href="#turn") TURN server support
              td.yes
              td.yes
              td.yes
              td.no
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") Necessary for NAT traversal, which is a fancy way of saying, "getting around firewalls."
            tr
              th
                a(href="#mediaStream") MediaStream API
              td.yes
              td.yes
              td.inc
              td.inc
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7")         
            tr
              th
                a(href="#webAudio") WebAudio Integration
              td.yes
              td.yes
              td.inc
              td.inc
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") WebAudio enables processing of raw audio. For WebRTC applications it's important that this capability not only exist, but that it's capable of being used with a MediaStream as a source.
            tr
              th
                a(href="#reliable") reliable dataChannels
              td.yes
              td.yes
              td.no
              td.no
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") Data channel support comes in two flavors: "reliable" means they are guaranteed to arrive and arrive in the correct order, "unreliable" means that order doesn't matter and dropped messages are acceptable.
            tr
              th
                a(href="#unreliable") unreliable dataChannels
              td.yes
              td.yes
              td.no
              td.no
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") Data channel support comes in two flavors: "reliable" means they are guaranteed to arrive and arrive in the correct order, "unreliable" means that order doesn't matter and dropped messages are acceptable.
            tr
              th
                a(href="#screenSharing") Screen Sharing
              td.inc(title="requires a flag")
              td.inc(title="requires a flag")
              td.no
              td.no            
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") The ability to request access to a MediaStream of the computer screen. This is crucial for feature parity with existing communication solutions.         
            tr
              th
                a(href="#rebroadcast") Stream re-broadcasting
              td.no
              td.no
              td.no
              td.no
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") In order to support some of the more interesting topologies for routing data, we need to be able to take a MediaStream object from one peer and add it to another PeerConneciton. Without this, the only way of doing multi-user is a mesh network or a centralized server.
            tr
              th
                a(href="#echo") Solid interoperability
              td.inc
              td.inc
              td.inc
              td.inc
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") Multiple browsers consistently being able to talk to each other is essential to making WebRTC a true web technology and not just something that makes for a nice demo.
            tr
              th
                a(href="#echo") Echo cancellation
              td.no
              td.no
              td.no
              td.no
              td.no
              td.no
              td.no
            tr.about
              th
              td(colspan="7") This is the most objective item in this list. But 3 or 4 users should be able to use a service like Talky without headphones on and not experience feedback problems.

      footer
        a#andyet(href='http://andyet.com', target='_blank')
          img(src='http://andyet.com/images/logo.png', width='40')
    script(src='prettyprint.js')
    script(src='http://static.andyet.com/tag.js')
